lines(Seq_Values, happinessPredict, col='blue')
setwd(dir = "H:/Ad/Education/Codes/R/FM")
setwd(dir = "H:/Ad/Education/Codes/R/FM")
getwd()
my_data <- read.csv("Brazil Imports.csv")
# Linear
plot(my_data$Index,my_data$Import, main='Year and Murders', xlab='Year',ylab='Murders',col="red")
a1<-cov(my_data$Index, my_data$Import)/var(my_data$Index) #Slope
a0<-mean(my_data$Import)-a1*mean(my_data$Index)
print(a1)
print(a0)
modlin <- lm(my_data$Index~my_data$Import)
abline(lm(my_data$Import ~ my_data$Index))
print(modlin)
abline(modlin)
# Parabola - Quadratic
plot(my_data$Index,my_data$Import, main='Year and Murders', xlab='Year',ylab='Murders',col="red",pch=16)
Import2 <- my_data$Import^2
#fit quadratic regression model
quadraticModel <- lm(my_data$Import ~ Index + Import2, data=my_data)
abline(modlin)
setwd(dir = "H:/Ad/Education/Codes/R/FM")
getwd()
my_data <- read.csv("Brazil Imports.csv")
# Linear
plot(my_data$Index,my_data$Import, main='Year and Murders', xlab='Year',ylab='Murders',col="red")
a1<-cov(my_data$Index, my_data$Import)/var(my_data$Index) #Slope
a0<-mean(my_data$Import)-a1*mean(my_data$Index)
print(a1)
print(a0)
modlin <- lm(my_data$Index~my_data$Import)
abline(lm(my_data$Import ~ my_data$Index))
print(modlin)
abline(modlin)
# Parabola - Quadratic
plot(my_data$Index,my_data$Import, main='Year and Murders', xlab='Year',ylab='Murders',col="red",pch=16)
Import2 <- my_data$Import^2
#fit quadratic regression model
quadraticModel <- lm(my_data$Import ~ Index + Import2, data=my_data)
#view model summary
summary(quadraticModel)
# Call:
lm(formula = Import ~ Index + Import2, data = my_data)
#create sequence of hour values
Seq_Values <- seq(0,15,,36)
#create list of predicted happiness levels using quadratic model
happinessPredict <- predict(quadraticModel,list(Index=Seq_Values, Index2=Seq_Values^2))
# create scatterplot of original data values
plot(my_data$Index, my_data$Import,main='Year and Murders', xlab='Year',ylab='Murders',col="red",pch=16)
# add predicted lines based on quadratic regression model
lines(Seq_Values, happinessPredict, col='blue')
#create sequence of hour values
Seq_Values <- seq(0,36)
#create list of predicted happiness levels using quadratic model
happinessPredict <- predict(quadraticModel,list(Index=Seq_Values, Index2=Seq_Values^2))
# create scatterplot of original data values
plot(my_data$Index, my_data$Import,main='Year and Murders', xlab='Year',ylab='Murders',col="red",pch=16)
# add predicted lines based on quadratic regression model
lines(Seq_Values, happinessPredict, col='blue')
# Call:
lm(formula = Import ~ Index + Import2, data = my_data)
#create sequence of hour values
Seq_Values <- seq(0,36)
#create list of predicted happiness levels using quadratic model
happinessPredict <- predict(quadraticModel,list(Index=Seq_Values, Index2=Seq_Values^2))
# create scatterplot of original data values
plot(my_data$Index, my_data$Import,main='Year and Murders', xlab='Year',ylab='Murders',col="red",pch=16)
# add predicted lines based on quadratic regression model
lines(Seq_Values, happinessPredict, col='blue')
res <- residuals(modlin)
#create sequence of hour values
Seq_Values <- seq(0,15,,36)
#create list of predicted happiness levels using quadratic model
happinessPredict <- predict(quadraticModel,list(Index=Seq_Values, Index2=Seq_Values^2))
# create scatterplot of original data values
plot(my_data$Index, my_data$Im,main='Year and Murders', xlab='Year',ylab='Murders',col="red",pch=16)
# add predicted lines based on quadratic regression model
lines(Seq_Values, happinessPredict, col='blue')
#create sequence of hour values
Seq_Values <- seq(0,15,,100)
#create list of predicted happiness levels using quadratic model
happinessPredict <- predict(quadraticModel,list(Index=Seq_Values, Index2=Seq_Values^2))
# create scatterplot of original data values
plot(my_data$Index, my_data$Im,main='Year and Murders', xlab='Year',ylab='Murders',col="red",pch=16)
# add predicted lines based on quadratic regression model
lines(Seq_Values, happinessPredict, col='blue')
res <- residuals(modlin)
# Parabola - Quadratic
plot(my_data$Index,my_data$Import, main='Year and Murders', xlab='Year',ylab='Murders',col="red",pch=16)
Import2 <- my_data$Import^2
#fit quadratic regression model
quadraticModel <- lm(my_data$Import ~ Index + Import2, data=my_data)
#view model summary
summary(quadraticModel)
# Call:
lm(formula = Import ~ Index + Import2, data = my_data)
#create sequence of hour values
Seq_Values <- seq(0,15,,100)
#create list of predicted happiness levels using quadratic model
happinessPredict <- predict(quadraticModel,list(Index=Seq_Values, Index2=Seq_Values^2))
# create scatterplot of original data values
plot(my_data$Index, my_data$Im,main='Year and Murders', xlab='Year',ylab='Murders',col="red",pch=16)
# add predicted lines based on quadratic regression model
lines(Seq_Values, happinessPredict, col='blue')
res <- residuals(modlin)
# Dinesh Allimuthu
# Data: the number of murders in the United States (in thousands) for the years intervals from 1985 to 1995.
Y <- c(686,
569,
741,
645,
739,
762,
768,
783,
842,
801,
677,
671,
805,
633,
745,
647,
702,
732,
715,
812,
692,
775,
775,
797,
741,
633,
686,
716,
723,
737,
729,
859,
732,
706,
747,
764)
X <- 1:36
## Linear Trend
plot(X,Y,pch=16, xlab=c('Years'), ylab=c('Murders (Thousands)'), cex=1)
linReg <- lm(Y~X)
summary(linReg)
linReg$coefficients
abline(linReg$coefficients, col='red',lwd=3,lty=1)
res <- residuals(linReg)
plot(X,res,pch=16,ylab=c('Residuals'))
abline(h=0,lwd=3,lty=1)
# Normality of the interval
ks.test(res,"pnorm",mean(res),sd(res))
# confident and prediction interval
Xnew <- data.frame(x=seq(1985,1995,,11))
pred.w.clim<-predict(linReg,Xnew,interval="confidence",level=0.95)
pred.w.plim<-predict(linReg,Xnew,interval="prediction",level=0.95)
# confident and prediction interval
Xnew <- data.frame(x=seq(1,36,,36))
pred.w.clim<-predict(linReg,Xnew,interval="confidence",level=0.95)
pred.w.plim<-predict(linReg,Xnew,interval="prediction",level=0.95)
matplot(Xnew$x,cbind(pred.w.clim,pred.w.plim[,-1]),lty=c(1,2,2,3,3),
type="l",col=c("black","blue","blue","red","red"),
ylab="Murders",xlab="Year",lwd=c(1,2,2,2,2))
legend("topleft",lty=2:3,col=c("blue","red"),lwd=c(2,2),
c("95 confidence interval%","Prediction interval 95%"))
points(X,Y,col="black",pch=16,cex=1.5)
## Quadratic trend
# plot(X,Y, pch=16)
X2 <- X^2
QuadModel <-lm(Y ~ X + X2)
summary(QuadModel)
timevalues <- seq(1985,1995,,50)
timevalues <- seq(1,36,,36)
predictedY <- predict(QuadModel,list(X=timevalues, X2=timevalues^2))
lines(timevalues,predictedY, lwd=3,lty=1, col='green')
legend(1990, 21.5, c("linear regression", "quadratic regression", "data"),
col = c("red","green", "black"), text.col = "black",
lty = c(1, 1, 0), pch=c(NA_integer_, NA_integer_, 16),
lwd = c(3, 3, 2), text.font=1,box.lty=0, cex=1)
pred.w.clim<-predict(QuadModel,list(X=timevalues,X2=timevalues^2),interval="confidence",level=0.95)
pred.w.plim<-predict(QuadModel,list(X=timevalues,X2=timevalues^2),interval="prediction",level=0.95)
matplot(timevalues,cbind(pred.w.clim,pred.w.plim[,-1]),lty=c(1,2,2,3,3),
type="l",col=c("black","blue","blue","red","red"),
ylab="Murders",xlab="Year",lwd=c(1,2,2,2,2))
legend(1988,20,lty=2:3,col=c("blue","red"),
c("95 confidence interval%","Prediction interval 95%"),box.lty = 0,text.font = 1)
# Dinesh Allimuthu
# Data: the number of murders in the United States (in thousands) for the years intervals from 1985 to 1995.
Y <- c(686,
569,
741,
645,
739,
762,
768,
783,
842,
801,
677,
671,
805,
633,
745,
647,
702,
732,
715,
812,
692,
775,
775,
797,
741,
633,
686,
716,
723,
737,
729,
859,
732,
706,
747,
764)
X <- 1:36
## Linear Trend
plot(X,Y,pch=16, xlab=c('Years'), ylab=c('Murders (Thousands)'), cex=1)
linReg <- lm(Y~X)
summary(linReg)
linReg$coefficients
abline(linReg$coefficients, col='red',lwd=3,lty=1)
res <- residuals(linReg)
plot(X,res,pch=16,ylab=c('Residuals'))
abline(h=0,lwd=3,lty=1)
# Normality of the interval
ks.test(res,"pnorm",mean(res),sd(res))
# confident and prediction interval
Xnew <- data.frame(x=seq(1,36,,36))
pred.w.clim<-predict(linReg,Xnew,interval="confidence",level=0.95)
pred.w.plim<-predict(linReg,Xnew,interval="prediction",level=0.95)
matplot(Xnew$x,cbind(pred.w.clim,pred.w.plim[,-1]),lty=c(1,2,2,3,3),
type="l",col=c("black","blue","blue","red","red"),
ylab="Murders",xlab="Year",lwd=c(1,2,2,2,2))
legend("topleft",lty=2:3,col=c("blue","red"),lwd=c(2,2),
c("95 confidence interval%","Prediction interval 95%"))
points(X,Y,col="black",pch=16,cex=1.5)
## Quadratic trend
# plot(X,Y, pch=16)
X2 <- X^2
QuadModel <-lm(Y ~ X + X2)
summary(QuadModel)
timevalues <- seq(1,36,,36)
predictedY <- predict(QuadModel,list(X=timevalues, X2=timevalues^2))
lines(timevalues,predictedY, lwd=3,lty=1, col='green')
legend(1990, 21.5, c("linear regression", "quadratic regression", "data"),
col = c("red","green", "black"), text.col = "black",
lty = c(1, 1, 0), pch=c(NA_integer_, NA_integer_, 16),
lwd = c(3, 3, 2), text.font=1,box.lty=0, cex=1)
pred.w.clim<-predict(QuadModel,list(X=timevalues,X2=timevalues^2),interval="confidence",level=0.95)
pred.w.plim<-predict(QuadModel,list(X=timevalues,X2=timevalues^2),interval="prediction",level=0.95)
matplot(timevalues,cbind(pred.w.clim,pred.w.plim[,-1]),lty=c(1,2,2,3,3),
type="l",col=c("black","blue","blue","red","red"),
ylab="Murders",xlab="Year",lwd=c(1,2,2,2,2))
legend(1988,20,lty=2:3,col=c("blue","red"),
c("95 confidence interval%","Prediction interval 95%"),box.lty = 0,text.font = 1)
points(X,Y,col="black",pch=16,cex=1.5)
# ---------------------- The End ----------------------- #
# Dinesh Allimuthu
# Data: Brazil Import Goods in Millions
Y <- c(686,
569,
741,
645,
739,
762,
768,
783,
842,
801,
677,
671,
805,
633,
745,
647,
702,
732,
715,
812,
692,
775,
775,
797,
741,
633,
686,
716,
723,
737,
729,
859,
732,
706,
747,
764)
X <- 1:36
## Linear Trend
plot(X,Y,pch=16, xlab=c('Years'), ylab=c('Murders (Thousands)'), cex=1)
## Linear Trend
plot(X,Y,pch=16, xlab=c('Index'), ylab=c('Brazil Goods (Millions)'), cex=1)
linReg <- lm(Y~X)
summary(linReg)
linReg$coefficients
abline(linReg$coefficients, col='red',lwd=3,lty=1)
res <- residuals(linReg)
plot(X,res,pch=16,ylab=c('Residuals'))
abline(h=0,lwd=3,lty=1)
# Normality of the interval
ks.test(res,"pnorm",mean(res),sd(res))
# confident and prediction interval
Xnew <- data.frame(x=seq(1,36,,36))
pred.w.clim<-predict(linReg,Xnew,interval="confidence",level=0.95)
pred.w.plim<-predict(linReg,Xnew,interval="prediction",level=0.95)
matplot(Xnew$x,cbind(pred.w.clim,pred.w.plim[,-1]),lty=c(1,2,2,3,3),
type="l",col=c("black","blue","blue","red","red"),
ylab="Import goods",xlab="Index",lwd=c(1,2,2,2,2))
legend("topleft",lty=2:3,col=c("blue","red"),lwd=c(2,2),
c("95 confidence interval%","Prediction interval 95%"))
## Quadratic trend
# plot(X,Y, pch=16)
X2 <- X^2
QuadModel <-lm(Y ~ X + X2)
summary(QuadModel)
timevalues <- seq(1,36,,36)
predictedY <- predict(QuadModel,list(X=timevalues, X2=timevalues^2))
lines(timevalues,predictedY, lwd=3,lty=1, col='green')
matplot(timevalues,cbind(pred.w.clim,pred.w.plim[,-1]),lty=c(1,2,2,3,3),
type="l",col=c("black","blue","blue","red","red"),
ylab="Import Goods",xlab="Index",lwd=c(1,2,2,2,2))
## Quadratic trend
# plot(X,Y, pch=16)
X2 <- X^2
QuadModel <-lm(Y ~ X + X2)
summary(QuadModel)
timevalues <- seq(1,36,,36)
predictedY <- predict(QuadModel,list(X=timevalues, X2=timevalues^2))
lines(timevalues,predictedY, lwd=3,lty=1, col='green')
legend(1990, 21.5, c("linear regression", "quadratic regression", "data"),
col = c("red","green", "black"), text.col = "black",
lty = c(1, 1, 0), pch=c(NA_integer_, NA_integer_, 16),
lwd = c(3, 3, 2), text.font=1,box.lty=0, cex=1)
pred.w.clim<-predict(QuadModel,list(X=timevalues,X2=timevalues^2),interval="confidence",level=0.95)
pred.w.plim<-predict(QuadModel,list(X=timevalues,X2=timevalues^2),interval="prediction",level=0.95)
matplot(timevalues,cbind(pred.w.clim,pred.w.plim[,-1]),lty=c(1,2,2,3,3),
type="l",col=c("black","blue","blue","red","red"),
ylab="Import Goods",xlab="Index",lwd=c(1,2,2,2,2))
legend(1988,20,lty=2:3,col=c("blue","red"),
c("95 confidence interval%","Prediction interval 95%"),box.lty = 0,text.font = 1)
points(X,Y,col="black",pch=16,cex=1.5)
## Quadratic trend
# plot(X,Y, pch=16)
X2 <- X^2
QuadModel <-lm(Y ~ X + X2)
summary(QuadModel)
timevalues <- seq(1,36,,36)
predictedY <- predict(QuadModel,list(X=timevalues, X2=timevalues^2))
lines(timevalues,predictedY, lwd=3,lty=1, col='green')
legend(1990, 21.5, c("linear regression", "quadratic regression", "data"),
col = c("red","green", "black"), text.col = "black",
lty = c(1, 1, 0), pch=c(NA_integer_, NA_integer_, 16),
lwd = c(3, 3, 2), text.font=1,box.lty=0, cex=1)
pred.w.clim<-predict(QuadModel,list(X=timevalues,X2=timevalues^2),interval="confidence",level=0.95)
pred.w.plim<-predict(QuadModel,list(X=timevalues,X2=timevalues^2),interval="prediction",level=0.95)
matplot(timevalues,cbind(pred.w.clim,pred.w.plim[,-1]),lty=c(1,2,2,3,3),
type="l",col=c("black","blue","blue","red","red"),
ylab="Import Goods",xlab="Index",lwd=c(1,2,2,2,2))
legend(1988,20,lty=2:3,col=c("blue","red"),
c("95 confidence interval%","Prediction interval 95%"),box.lty = 0,text.font = 1)
points(X,Y,col="black",pch=16,cex=1.5)
# set & get the working directory.
setwd(dir = "H:/Ad/Education/Codes/R/FM")
getwd()
# read the input file.
my_data <- read.csv("Brazil Import.csv")
# deduce the moving average using the library - zoo.
ma4 <- rollmean(
my_data$Murders,
k = 4,
fill = NA,
align = "center"
)
# deduce the moving average using the library - zoo.
ma4 <- rollmean(
my_data$Import,
k = 4,
fill = NA,
align = "center"
)
# deduce the moving average using the library - zoo.
ma4 <- rollmean(
my_data$Import,
k = 3,
fill = NA,
align = "center"
)
# read the input file.
my_data <- read.csv("Brazil Import.csv")
library(zoo)
# read the input file.
my_data <- read.csv("Brazil Import.csv")
# deduce the moving average using the library - zoo.
ma4 <- rollmean(
my_data$Import,
k = 3,
fill = NA,
align = "center"
)
ma4
# deduce the moving average using the library - zoo.
ma4 <- rollmean(
my_data$Import,
k = 4,
fill = NA,
align = "center"
)
ma5 <- rollmean(
my_data$Import,
k = 5,
fill = NA,
align = "center"
)
# deduce the centered moving average.
centered_ma <- function(x, q) {
# x is data and q is width of the moving window
n <- length(x)
ma <- rep(NA, n) # It just gives zeros n times.
m <- q %/% 2  # Have to more careful its " % / % " Always takes the floor value.
if (q %% 2 == 0) {
for (t in ((m + 1):(n - m))) {
val_ma <- 0.5 * x[t - m]
for (i in ((-m + 1):(m - 1))) {
val_ma = val_ma + x[t + i]
}
val_ma <- val_ma + 0.5 * x[t + m]
ma[t] = val_ma / q
}
}
else {
for (t in ((m + 1):(n - m))) {
val_ma = 0.0
for (i in ((-m):m)) {
val_ma = val_ma + x[t + i]
}
ma[t] = val_ma / q
}
}
return(ma)
}
q = 12 # q is width of the window
ca12 <- centered_ma(my_data$Murders, q)
ca12 <- centered_ma(my_data$Import, q)
"
lines(X4MV,Y4MV, lwd=2,col='green')
lines(X5MV, Y5MV,lwd=2, col='blue')
lines(X4CMV, Y4CMV, lwd=2, col='red')
"
my_data$ma4 <- ma4
my_data$ma5 <- ma5
my_data$ca12 <- ca12
View(my_data)
View(my_data)
# plot the data points against ma=4, ma=5 and centered moving = 4.
plot(my_data$Index,my_data$Import,pch=16, xlab=c('Index'), ylab=c('Brazil Goods (Millions)'), cex=1)
lines(my_data$Index+1, ma4, lwd=2,col='green') # to start from 1987 - used year + 1 to plot.
lines(my_data$Index, ma5, lwd=2, col='blue') # default start from 1987
lines(my_data$Index, ca12, lwd=2, col='red') # default start from 1987
legend(1985,24, col=c("black", "green", "red","blue"),
c("Data", "4-year MA", "4-year centered MA", "5-year MA"), box.lty=1,
lty=c(0,1,1,1), cex=0.7,
text.font=1, lwd=c(0,2,2,2), pch=c(16,NA_integer_, NA_integer_, NA_integer_))
legend(1985,24, col=c("black", "green", "red","blue"),
c("Data", "4-year MA", "12-year centered MA", "5-year MA"), box.lty=1,
lty=c(0,1,1,1), cex=0.7,
text.font=1, lwd=c(0,2,2,2), pch=c(16,NA_integer_, NA_integer_, NA_integer_))
# graph 5-year MA vs data
plot(my_data$Year,my_data$Import,pch=16,type='l', xlab=c('Index'), ylab=c('Brazil Goods (Millions)'), cex=1)
# graph 5-year MA vs data
plot(my_data$Index,my_data$Import,pch=16,type='l', xlab=c('Index'), ylab=c('Brazil Goods (Millions)'), cex=1)
lines(my_data$Index, ma5,  lty=2,lwd=2, col='blue')
legend(1,24, col=c("black", "green", "red","blue"),
c("Data", "4-year MA", "12-year centered MA", "5-year MA"), box.lty=1,
lty=c(0,1,1,1), cex=0.7,
text.font=1, lwd=c(0,2,2,2), pch=c(16,NA_integer_, NA_integer_, NA_integer_))
# plot the data points against ma=4, ma=5 and centered moving = 4.
plot(my_data$Index,my_data$Import,pch=16, xlab=c('Index'), ylab=c('Brazil Goods (Millions)'), cex=1)
lines(my_data$Index+1, ma4, lwd=2,col='green') # to start from 1987 - used year + 1 to plot.
lines(my_data$Index, ma5, lwd=2, col='blue') # default start from 1987
lines(my_data$Index, ca12, lwd=2, col='red') # default start from 1987
legend(1,24, col=c("black", "green", "red","blue"),
c("Data", "4-year MA", "12-year centered MA", "5-year MA"), box.lty=1,
lty=c(0,1,1,1), cex=0.7,
text.font=1, lwd=c(0,2,2,2), pch=c(16,NA_integer_, NA_integer_, NA_integer_))
# graph 5-year MA vs data
plot(my_data$Index,my_data$Import,pch=16,type='l', xlab=c('Index'), ylab=c('Brazil Goods (Millions)'), cex=1)
lines(my_data$Index, ma5,  lty=2,lwd=2, col='blue')
legend(1,24, col=c("black", "blue"),
c("Data", "5-year MA"), box.lty=1,
lty=c(1,2), cex=1,
text.font=1, lwd=c(2,2))
